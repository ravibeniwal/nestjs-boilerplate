services:
  postgres:
    image: postgres:16.2-alpine
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - boilerplate-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
  maildev:
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # Uncomment to use redis
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - 6379:6379

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}

  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - '3000:3000'


    
  # auth:
  #   build:
  #     context: .
  #     dockerfile: ./apps/auth/Dockerfile
  #     target: development
  #   command: npm run start:dev auth
  #   ports:
  #     - '3001:3001'
  #   env_file:
  #     - ./apps/auth/.env
  #   depends_on:
  #     - rabbitmq
   
  

volumes:
  boilerplate-db:
    driver: local
